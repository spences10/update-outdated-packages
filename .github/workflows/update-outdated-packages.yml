name: Update Outdated Packages

on:
  schedule:
    - cron: '0 0 * * 0' # Runs every Sunday at midnight
  workflow_dispatch: # Allows manual triggering of the workflow

jobs:
  run_check_outdated_packages:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Fetch the full history to enable force-pushes

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install jq
        run: sudo apt-get install -y jq

      - name: Install pnpm
        run: npm install -g pnpm

      - name: Check for outdated packages
        id: outdated
        run: |
          OUTDATED_PACKAGES=$(pnpm outdated -r --json | jq -c 'to_entries | map({key: .key, value: .value.wanted})')
          echo "OUTDATED_PACKAGES=$OUTDATED_PACKAGES" >> $GITHUB_ENV

      - name: Debug OUTDATED_PACKAGES
        run: echo "$OUTDATED_PACKAGES"

      - name: Update and commit outdated packages
        run: |
          echo "$OUTDATED_PACKAGES" | jq -r '.[] | "\(.key) \(.value)"' | while read -r PKG; do
            IFS=' ' read -ra PARTS <<< "$PKG"
            pnpm add ${PARTS[0]}@${PARTS[1]}
            git config --global user.name 'GitHub Actions'
            git config --global user.email 'actions@github.com'
            git commit -am "Update ${PARTS[0]} to ${PARTS[1]}"
          done

      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v6
        with:
          title: 'Update outdated packages'
          body: 'This PR updates all outdated packages to their latest versions.'
          branch: 'update-outdated-packages'
          delete-branch: true
          token: ${{ secrets.ACTIONS_GITHUB_TOKEN }}
